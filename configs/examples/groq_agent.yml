# Groq Agent Configuration
agent:
  name: "Groq Coding Assistant"
  description: "AI agent powered by Groq's fast LLMs for coding tasks"
  version: "1.0.0"

# LLM Configuration
llm:
  provider: "groq"
  model: "meta-llama/llama-4-scout-17b-16e-instruct"
  temperature: 0.1
  max_tokens: 4000
  api_key_env: "GROQ_API_KEY"

# Prompts Configuration
prompts:
  system_prompt:
    template: |
      You are an expert software developer and coding assistant powered by Groq's fast LLMs. Your role is to help users with:
      - Writing clean, efficient, and well-documented code
      - Debugging and troubleshooting issues
      - Code reviews and optimization suggestions
      - Architecture and design decisions
      - Best practices and conventions
      
      Programming context: {programming_language}
      Project context: {project_context}
      Memory context: {memory_context}
      
      Always:
      - Write production-ready code
      - Include proper error handling
      - Add meaningful comments
      - Follow language-specific best practices
      - Consider security implications
    variables: ["programming_language", "project_context", "memory_context"]
    
  user_prompt:
    template: |
      Coding Request: {user_input}
      
      Language: {language}
      Current file: {current_file}
      
      Please provide:
      1. Complete, working code solution
      2. Explanation of the approach
      3. Potential improvements or alternatives
      4. Testing suggestions
    variables: ["user_input", "language", "current_file"]
  
  tool_prompt:
    template: |
      Execute the following coding task: {task}
      Language: {language}
      
      Ensure the code is tested and follows best practices.
    variables: ["task", "language"]

# Tools Configuration
tools:
  built_in:
    - "file_reader"
    - "file_writer"
    - "code_executor"
    - "calculator"
  custom: []

# Memory Configuration
memory:
  enabled: true
  provider: "langmem"
  types:
    semantic: true
    episodic: true
    procedural: true
  storage:
    backend: "memory"
  settings:
    max_memory_size: 3000
    retention_days: 30
    background_processing: true

# ReAct Configuration
react:
  max_iterations: 8
  recursion_limit: 30

# Optimization Configuration
optimization:
  enabled: true
  prompt_optimization:
    enabled: true
    feedback_collection: true
    ab_testing: true
    optimization_frequency: "weekly"
  performance_tracking:
    enabled: true
    metrics:
      - "response_time"
      - "code_quality"
      - "user_satisfaction"

# Runtime Configuration
runtime:
  max_iterations: 8
  timeout_seconds: 30
  retry_attempts: 2
  debug_mode: false

# Evaluation Configuration
evaluation:
  enabled: true
  langsmith:
    enabled: false  # Set to true if LangSmith is available
    api_key_env: "LANGSMITH_API_KEY"
    project_name: "groq_coding_agent"
    endpoint: "https://api.smith.langchain.com"
    tracing: false
  evaluators:
    - name: "code_quality"
      type: "llm_as_judge"
      prompt: |
        Evaluate the quality of code generated by the Groq-powered agent.
        Consider:
        1. Correctness and functionality
        2. Code efficiency and performance
        3. Readability and maintainability
        4. Best practices adherence
        5. Speed of generation (Groq advantage)
        Score from 0.0 to 1.0 with detailed reasoning.
      model: "openai:gpt-4.1-mini"  # Use different model for evaluation
      enabled: true
    - name: "response_time"
      type: "heuristic"
      parameters:
        target_time: 3.0  # Groq should be faster
        max_time: 20.0
      enabled: true
  metrics: ["code_quality", "response_time", "generation_speed"]
  auto_evaluate: false
  evaluation_frequency: "manual"
  batch_size: 5
  max_concurrency: 2

# Logging Configuration
logging:
  enabled: true
  level: "INFO"
  format: "structured"
  console:
    enabled: true
    level: "INFO"
    format: "readable"
  file:
    enabled: false  # Keep minimal for speed testing
    path: "logs/groq_agent.log"
    level: "DEBUG"
    max_size_mb: 100
    backup_count: 5
  components:
    agent: "INFO"
    tools: "DEBUG"
    memory: "INFO"
    optimization: "INFO"
  correlation:
    enabled: true
    include_in_response: false
  performance:
    log_execution_time: true  # Important for Groq speed analysis
    log_token_usage: true
    log_memory_operations: false
  privacy:
    mask_api_keys: true
    mask_user_input: false
    excluded_fields: ["api_key", "auth_token"]