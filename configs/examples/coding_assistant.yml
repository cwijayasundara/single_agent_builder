# Coding Assistant Configuration
agent:
  name: "Coding Assistant"
  description: "AI agent specialized in software development and programming tasks"
  version: "1.0.0"

# LLM Configuration
llm:
  provider: "anthropic"
  model: "claude-3-5-sonnet-20241022"
  temperature: 0.1
  max_tokens: 4000
  api_key_env: "ANTHROPIC_API_KEY"

# Prompts Configuration
prompts:
  system_prompt:
    template: |
      You are an expert software developer and coding assistant. Your role is to help users with:
      - Writing clean, efficient, and well-documented code
      - Debugging and troubleshooting issues
      - Code reviews and optimization suggestions
      - Architecture and design decisions
      - Best practices and conventions
      
      Programming context: {programming_language}
      Project context: {project_context}
      Memory context: {memory_context}
      
      Always:
      - Write production-ready code
      - Include proper error handling
      - Add meaningful comments
      - Follow language-specific best practices
      - Consider security implications
    variables: ["programming_language", "project_context", "memory_context"]
    
  user_prompt:
    template: |
      Coding Request: {user_input}
      
      Language: {language}
      Current file: {current_file}
      
      Please provide:
      1. Complete, working code solution
      2. Explanation of the approach
      3. Potential improvements or alternatives
      4. Testing suggestions
    variables: ["user_input", "language", "current_file"]
  
  tool_prompt:
    template: |
      Execute the following coding task: {task}
      Language: {language}
      
      Ensure the code is tested and follows best practices.
    variables: ["task", "language"]

# Tools Configuration
tools:
  built_in:
    - "file_reader"
    - "file_writer"
    - "code_executor"
  custom: []

# Memory Configuration
memory:
  enabled: true
  provider: "langmem"
  types:
    semantic: true
    episodic: true
    procedural: true
  storage:
    backend: "memory"
  settings:
    max_memory_size: 8000
    retention_days: 60
    background_processing: true

# ReAct Configuration (simplified - no complex graph needed)
react:
  max_iterations: 15
  recursion_limit: 60

# Optimization Configuration
optimization:
  enabled: true
  prompt_optimization:
    enabled: true
    feedback_collection: true
    ab_testing: false  # More conservative for code generation
    optimization_frequency: "monthly"
  performance_tracking:
    enabled: true
    metrics:
      - "code_quality"
      - "execution_success"
      - "user_satisfaction"
      - "response_time"

# Runtime Configuration
runtime:
  max_iterations: 15
  timeout_seconds: 180
  retry_attempts: 3
  debug_mode: true

# Evaluation Configuration
evaluation:
  enabled: true
  langsmith:
    enabled: false  # Set to true if LangSmith is available
    api_key_env: "LANGSMITH_API_KEY"
    project_name: "coding_assistant"
    endpoint: "https://api.smith.langchain.com"
    tracing: false
  evaluators:
    - name: "code_quality"
      type: "llm_as_judge"
      prompt: |
        Evaluate the quality of the generated code.
        Consider:
        1. Correctness and functionality
        2. Code structure and readability
        3. Best practices and conventions
        4. Error handling and edge cases
        5. Security considerations
        Score from 0.0 to 1.0 with detailed reasoning.
      model: "anthropic:claude-3-5-sonnet-20241022"
      enabled: true
    - name: "response_time"
      type: "heuristic"
      parameters:
        target_time: 20.0
        max_time: 120.0
      enabled: true
  metrics: ["code_quality", "response_time", "execution_success"]
  auto_evaluate: false
  evaluation_frequency: "manual"
  batch_size: 3
  max_concurrency: 1

# Logging Configuration
logging:
  enabled: true
  level: "DEBUG"
  format: "structured"
  console:
    enabled: true
    level: "INFO"
    format: "readable"
  file:
    enabled: true
    path: "logs/coding_assistant.log"
    level: "DEBUG"
    max_size_mb: 200
    backup_count: 10
  components:
    agent: "DEBUG"
    tools: "DEBUG"
    memory: "INFO"
    optimization: "INFO"
    code_executor: "DEBUG"
  correlation:
    enabled: true
    include_in_response: false
  performance:
    log_execution_time: true
    log_token_usage: true
    log_memory_operations: true
  privacy:
    mask_api_keys: true
    mask_user_input: false
    excluded_fields: ["api_key", "auth_token"]