# =============================================================================
# MINIMAL AGENT CONFIGURATION TEMPLATE
# =============================================================================
# This is a minimal template for creating simple AI agents.
# Contains only the essential configuration options.
# 
# For comprehensive options, see template_agent.yml
# 
# INSTRUCTIONS:
# 1. Replace placeholder values with your configurations
# 2. Add optional sections as needed
# 3. Save with a descriptive name (e.g., my_simple_agent.yml)
# =============================================================================

# Agent Information (Required)
agent:
  name: "My Simple Agent"                   # Replace with your agent's name
  description: "A simple AI assistant"     # Describe what your agent does
  version: "1.0.0"

# LLM Configuration (Required)
llm:
  provider: "openai"                        # Options: openai, anthropic, google, groq
  model: "gpt-4.1-mini"                     # Model to use
  temperature: 0.7                          # 0.0 = deterministic, 1.0 = creative
  max_tokens: 1000                          # Maximum response length
  api_key_env: "OPENAI_API_KEY"            # Environment variable for API key

# Prompts Configuration (Required)
prompts:
  system_prompt:
    template: |
      You are a helpful AI assistant.
      
      Your role is to assist users with their questions and tasks.
      Always be helpful, accurate, and friendly.
      
      User query: {query}
    variables: ["query"]

# Tools Configuration (Optional)
tools:
  built_in: []                              # Add tools like ["web_search", "calculator"]
  custom: []

# Memory Configuration (Optional)
memory:
  enabled: false                            # Set to true to enable memory
  provider: "langmem"                       # Memory provider
  types:
    semantic: true                          # Store facts and knowledge
    episodic: true                          # Store conversation history  
    procedural: false                       # Store learned patterns
  storage:
    backend: "memory"                       # Storage backend
  settings:
    max_memory_size: 1000                   # Maximum memory items
    retention_days: 7                       # Memory retention period
    background_processing: true             # Background processing

# ReAct Configuration (Optional)
react:
  max_iterations: 5                         # Maximum reasoning cycles
  recursion_limit: 25

# Optimization Configuration (Optional)
optimization:
  enabled: false                            # Set to true to enable optimization
  prompt_optimization:
    enabled: false                          # Enable prompt optimization
    feedback_collection: false             # Collect feedback for optimization  
    ab_testing: false                       # Enable A/B testing
    optimization_frequency: "weekly"       # How often to optimize
  performance_tracking:
    enabled: false                          # Enable performance tracking
    metrics: ["response_time", "accuracy"] # Metrics to track

# Runtime Configuration (Optional)
runtime:
  timeout_seconds: 60                       # Response timeout
  debug_mode: false                         # Enable debug output

# =============================================================================
# QUICK CUSTOMIZATION EXAMPLES
# =============================================================================
#
# TO MAKE A RESEARCH AGENT:
# - Change tools.built_in to ["web_search"]
# - Update system prompt to mention research capabilities
# - Set temperature to 0.3 for factual accuracy
#
# TO MAKE A CREATIVE AGENT:
# - Set temperature to 0.9
# - Update system prompt to encourage creativity
# - Keep tools minimal
#
# TO ENABLE MEMORY:
# - Set memory.enabled to true
# - Add {memory_context} to system prompt variables
# - Update system prompt template to use {memory_context}
#
# TO ENABLE OPTIMIZATION:
# - Set optimization.enabled to true
# - Enable prompt_optimization for automatic improvement
# - Enable performance_tracking to monitor agent performance
# - Use A/B testing to find the best prompts
#
# TO ADD EVALUATION:
# - Add evaluation section with evaluators and metrics
# - Enable LangSmith tracing for detailed analysis
# - Create test datasets for consistent evaluation
#
# TO ENHANCE LOGGING:
# - Add logging section with console and file options
# - Configure component-specific log levels
# - Enable performance and correlation logging
#
# =============================================================================